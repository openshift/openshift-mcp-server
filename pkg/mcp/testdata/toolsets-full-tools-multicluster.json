[
  {
    "annotations": {
      "title": "Application: Create",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Create a new OpenShift AI application (Jupyter notebook, code server, etc.)",
    "inputSchema": {
      "type": "object",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to apply to the application (optional)",
          "type": "object"
        },
        "app_type": {
          "description": "Application type (e.g., 'Jupyter', 'CodeServer')",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "description": {
          "description": "Description for the application (optional)",
          "type": "string"
        },
        "display_name": {
          "description": "Display name for the application (optional)",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to the application (optional)",
          "type": "object"
        },
        "name": {
          "description": "The name of the application",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace where to create the application",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace",
        "app_type"
      ]
    },
    "name": "application_create"
  },
  {
    "annotations": {
      "title": "Application: Delete",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Delete an OpenShift AI application",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the application",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the application",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "application_delete"
  },
  {
    "annotations": {
      "title": "Application: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Get a specific OpenShift AI application",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the application",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the application",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "application_get"
  },
  {
    "annotations": {
      "title": "Applications: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": false
    },
    "description": "List all OpenShift AI applications (Jupyter notebooks, code servers, etc.)",
    "inputSchema": {
      "type": "object",
      "properties": {
        "app_type": {
          "description": "Filter by application type (optional, e.g., 'Jupyter', 'CodeServer')",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to filter applications (optional, defaults to all namespaces)",
          "type": "string"
        },
        "status": {
          "description": "Filter by application status (optional)",
          "type": "string"
        }
      }
    },
    "name": "applications_list"
  },
  {
    "annotations": {
      "title": "Configuration: Contexts List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": false
    },
    "description": "List all available context names and associated server urls from the kubeconfig file",
    "inputSchema": {
      "type": "object"
    },
    "name": "configuration_contexts_list"
  },
  {
    "annotations": {
      "title": "Configuration: View",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Get the current Kubernetes configuration content as a kubeconfig YAML",
    "inputSchema": {
      "type": "object",
      "properties": {
        "minified": {
          "description": "Return a minified version of the configuration. If set to true, keeps only the current-context and the relevant pieces of the configuration for that context. If set to false, all contexts, clusters, auth-infos, and users are returned in the configuration. (Optional, default true)",
          "type": "boolean"
        }
      }
    },
    "name": "configuration_view"
  },
  {
    "annotations": {
      "title": "Data Science Project: Create",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Create a new Data Science Project",
    "inputSchema": {
      "type": "object",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to apply to the Data Science Project (optional)",
          "type": "object"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "description": {
          "description": "A description for the Data Science Project (optional)",
          "type": "string"
        },
        "display_name": {
          "description": "A display name for the Data Science Project (optional)",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to the Data Science Project (optional)",
          "type": "object"
        },
        "name": {
          "description": "The name of the Data Science Project",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace where to create the Data Science Project",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "datascience_project_create"
  },
  {
    "annotations": {
      "title": "Data Science Project: Delete",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Delete a Data Science Project",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the Data Science Project",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the Data Science Project",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "datascience_project_delete"
  },
  {
    "annotations": {
      "title": "Data Science Project: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Get details of a specific Data Science Project",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the Data Science Project",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the Data Science Project",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "datascience_project_get"
  },
  {
    "annotations": {
      "title": "Data Science Projects: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all Data Science Projects in the current OpenShift AI cluster",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace to search for Data Science Projects (optional, defaults to all namespaces)",
          "type": "string"
        }
      }
    },
    "name": "datascience_projects_list"
  },
  {
    "annotations": {
      "title": "Events: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all the Kubernetes events in the current cluster from all namespaces",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "namespace": {
          "description": "Optional Namespace to retrieve the events from. If not provided, will list events from all namespaces",
          "type": "string"
        }
      }
    },
    "name": "events_list"
  },
  {
    "annotations": {
      "title": "Experiment: Create",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Create a new OpenShift AI machine learning experiment",
    "inputSchema": {
      "type": "object",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to apply to the experiment (optional)",
          "type": "object"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "description": {
          "description": "Description for the experiment (optional)",
          "type": "string"
        },
        "display_name": {
          "description": "Display name for the experiment (optional)",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to the experiment (optional)",
          "type": "object"
        },
        "name": {
          "description": "The name of the experiment",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace where to create the experiment",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "experiment_create"
  },
  {
    "annotations": {
      "title": "Experiment: Delete",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Delete an OpenShift AI machine learning experiment",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of experiment",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the experiment",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "experiment_delete"
  },
  {
    "annotations": {
      "title": "Experiment: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Get a specific OpenShift AI machine learning experiment",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the experiment",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the experiment",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "experiment_get"
  },
  {
    "annotations": {
      "title": "Experiments: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": false
    },
    "description": "List all OpenShift AI machine learning experiments",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to filter experiments (optional, defaults to all namespaces)",
          "type": "string"
        },
        "status": {
          "description": "Filter by experiment status (optional)",
          "type": "string"
        }
      }
    },
    "name": "experiments_list"
  },
  {
    "annotations": {
      "title": "Helm: Install",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Install a Helm chart in the current or provided namespace",
    "inputSchema": {
      "type": "object",
      "properties": {
        "chart": {
          "description": "Chart reference to install (for example: stable/grafana, oci://ghcr.io/nginxinc/charts/nginx-ingress)",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the Helm release (Optional, random name if not provided)",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to install the Helm chart in (Optional, current namespace if not provided)",
          "type": "string"
        },
        "values": {
          "description": "Values to pass to the Helm chart (Optional)",
          "type": "object"
        }
      },
      "required": [
        "chart"
      ]
    },
    "name": "helm_install"
  },
  {
    "annotations": {
      "title": "Helm: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all the Helm releases in the current or provided namespace (or in all namespaces if specified)",
    "inputSchema": {
      "type": "object",
      "properties": {
        "all_namespaces": {
          "description": "If true, lists all Helm releases in all namespaces ignoring the namespace argument (Optional)",
          "type": "boolean"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to list Helm releases from (Optional, all namespaces if not provided)",
          "type": "string"
        }
      }
    },
    "name": "helm_list"
  },
  {
    "annotations": {
      "title": "Helm: Uninstall",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Uninstall a Helm release in the current or provided namespace",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the Helm release to uninstall",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to uninstall the Helm release from (Optional, current namespace if not provided)",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "name": "helm_uninstall"
  },
  {
    "annotations": {
      "title": "Model: Create",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Create a new machine learning model entry in OpenShift AI",
    "inputSchema": {
      "type": "object",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to apply to the model (optional)",
          "type": "object"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "description": {
          "description": "A description for the model (optional)",
          "type": "string"
        },
        "display_name": {
          "description": "A display name for the model (optional)",
          "type": "string"
        },
        "format": {
          "description": "The model format (e.g., pickle, onnx, savedmodel)",
          "type": "string"
        },
        "framework_version": {
          "description": "The framework version (optional)",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to the model (optional)",
          "type": "object"
        },
        "model_type": {
          "description": "The model type (e.g., pytorch, tensorflow, sklearn)",
          "type": "string"
        },
        "name": {
          "description": "The name of the model",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace where to create the model",
          "type": "string"
        },
        "version": {
          "description": "The model version (optional)",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace",
        "model_type",
        "format"
      ]
    },
    "name": "model_create"
  },
  {
    "annotations": {
      "title": "Model: Delete",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Delete a machine learning model from OpenShift AI",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the model",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the model",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "model_delete"
  },
  {
    "annotations": {
      "title": "Model: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Get details of a specific machine learning model",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the model",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the model",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "model_get"
  },
  {
    "annotations": {
      "title": "Model: Update",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Update an existing machine learning model in OpenShift AI",
    "inputSchema": {
      "type": "object",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to apply to the model (optional)",
          "type": "object"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "description": {
          "description": "A description for the model (optional)",
          "type": "string"
        },
        "display_name": {
          "description": "A display name for the model (optional)",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to the model (optional)",
          "type": "object"
        },
        "name": {
          "description": "The name of the model",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the model",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "model_update"
  },
  {
    "annotations": {
      "title": "Models: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all machine learning models in the current OpenShift AI cluster",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "model_type": {
          "description": "Filter models by type (e.g., pytorch, tensorflow, sklearn)",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace to search for models (optional, defaults to all namespaces)",
          "type": "string"
        },
        "status": {
          "description": "Filter models by status (e.g., Ready, Pending, Failed)",
          "type": "string"
        }
      }
    },
    "name": "models_list"
  },
  {
    "annotations": {
      "title": "Namespaces: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all the Kubernetes namespaces in the current cluster",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        }
      }
    },
    "name": "namespaces_list"
  },
  {
    "annotations": {
      "title": "Node: Log",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Get logs from a Kubernetes node (kubelet, kube-proxy, or other system logs). This accesses node logs through the Kubernetes API proxy to the kubelet",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the node to get logs from",
          "type": "string"
        },
        "query": {
          "description": "query specifies services(s) or files from which to return logs (required). Example: \"kubelet\" to fetch kubelet logs, \"/\u003clog-file-name\u003e\" to fetch a specific log file from the node (e.g., \"/var/log/kubelet.log\" or \"/var/log/kube-proxy.log\")",
          "type": "string"
        },
        "tailLines": {
          "default": 100,
          "description": "Number of lines to retrieve from the end of the logs (Optional, 0 means all logs)",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "name",
        "query"
      ]
    },
    "name": "nodes_log"
  },
  {
    "annotations": {
      "title": "Node: Stats Summary",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Get detailed resource usage statistics from a Kubernetes node via the kubelet's Summary API. Provides comprehensive metrics including CPU, memory, filesystem, and network usage at the node, pod, and container levels. On systems with cgroup v2 and kernel 4.20+, also includes PSI (Pressure Stall Information) metrics that show resource pressure for CPU, memory, and I/O. See https://kubernetes.io/docs/reference/instrumentation/understand-psi-metrics/ for details on PSI metrics",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the node to get stats from",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "name": "nodes_stats_summary"
  },
  {
    "annotations": {
      "title": "Pipeline: Create",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Create a new OpenShift AI data science pipeline",
    "inputSchema": {
      "type": "object",
      "properties": {
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to apply to the pipeline (optional)",
          "type": "object"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "description": {
          "description": "Description for the pipeline (optional)",
          "type": "string"
        },
        "display_name": {
          "description": "Display name for the pipeline (optional)",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels to apply to the pipeline (optional)",
          "type": "object"
        },
        "name": {
          "description": "The name of the pipeline",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace where to create the pipeline",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "pipeline_create"
  },
  {
    "annotations": {
      "title": "Pipeline: Delete",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Delete an OpenShift AI data science pipeline",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the pipeline",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the pipeline",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "pipeline_delete"
  },
  {
    "annotations": {
      "title": "Pipeline: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Get a specific OpenShift AI data science pipeline",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the pipeline",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the pipeline",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "pipeline_get"
  },
  {
    "annotations": {
      "title": "Pipeline Run: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false
    },
    "description": "Get a specific OpenShift AI data science pipeline run",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "The name of the pipeline run",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the pipeline run",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace"
      ]
    },
    "name": "pipeline_run_get"
  },
  {
    "annotations": {
      "title": "Pipeline Runs: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": false
    },
    "description": "List all OpenShift AI data science pipeline runs",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to filter pipeline runs (optional, defaults to all namespaces)",
          "type": "string"
        },
        "pipeline_name": {
          "description": "Filter by pipeline name (optional)",
          "type": "string"
        },
        "status": {
          "description": "Filter by pipeline run status (optional)",
          "type": "string"
        }
      }
    },
    "name": "pipeline_runs_list"
  },
  {
    "annotations": {
      "title": "Pipelines: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": false
    },
    "description": "List all OpenShift AI data science pipelines",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to filter pipelines (optional, defaults to all namespaces)",
          "type": "string"
        },
        "status": {
          "description": "Filter by pipeline status (optional)",
          "type": "string"
        }
      }
    },
    "name": "pipelines_list"
  },
  {
    "annotations": {
      "title": "Pods: Delete",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Delete a Kubernetes Pod in the current or provided namespace with the provided name",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the Pod to delete",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to delete the Pod from",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "name": "pods_delete"
  },
  {
    "annotations": {
      "title": "Pods: Exec",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Execute a command in a Kubernetes Pod in the current or provided namespace with the provided name and command",
    "inputSchema": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command to execute in the Pod container. The first item is the command to be run, and the rest are the arguments to that command. Example: [\"ls\", \"-l\", \"/tmp\"]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "container": {
          "description": "Name of the Pod container where the command will be executed (Optional)",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the Pod where the command will be executed",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the Pod where the command will be executed",
          "type": "string"
        }
      },
      "required": [
        "name",
        "command"
      ]
    },
    "name": "pods_exec"
  },
  {
    "annotations": {
      "title": "Pods: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Get a Kubernetes Pod in the current or provided namespace with the provided name",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the Pod",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to get the Pod from",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "name": "pods_get"
  },
  {
    "annotations": {
      "title": "Pods: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all the Kubernetes pods in the current cluster from all namespaces",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "labelSelector": {
          "description": "Optional Kubernetes label selector (e.g. 'app=myapp,env=prod' or 'app in (myapp,yourapp)'), use this option when you want to filter the pods by label",
          "pattern": "([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]",
          "type": "string"
        }
      }
    },
    "name": "pods_list"
  },
  {
    "annotations": {
      "title": "Pods: List in Namespace",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List all the Kubernetes pods in the specified namespace in the current cluster",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "labelSelector": {
          "description": "Optional Kubernetes label selector (e.g. 'app=myapp,env=prod' or 'app in (myapp,yourapp)'), use this option when you want to filter the pods by label",
          "pattern": "([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to list pods from",
          "type": "string"
        }
      },
      "required": [
        "namespace"
      ]
    },
    "name": "pods_list_in_namespace"
  },
  {
    "annotations": {
      "title": "Pods: Log",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Get the logs of a Kubernetes Pod in the current or provided namespace with the provided name",
    "inputSchema": {
      "type": "object",
      "properties": {
        "container": {
          "description": "Name of the Pod container to get the logs from (Optional)",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "name": {
          "description": "Name of the Pod to get the logs from",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to get the Pod logs from",
          "type": "string"
        },
        "previous": {
          "description": "Return previous terminated container logs (Optional)",
          "type": "boolean"
        },
        "tail": {
          "default": 100,
          "description": "Number of lines to retrieve from the end of the logs (Optional, default: 100)",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "name"
      ]
    },
    "name": "pods_log"
  },
  {
    "annotations": {
      "title": "Pods: Run",
      "readOnlyHint": false,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Run a Kubernetes Pod in the current or provided namespace with the provided container image and optional name",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "image": {
          "description": "Container Image to run in the Pod",
          "type": "string"
        },
        "name": {
          "description": "Name of the Pod (Optional, random name if not provided)",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to run the Pod in",
          "type": "string"
        },
        "port": {
          "description": "TCP/IP port to expose from the Pod container (Optional, no port exposed if not provided)",
          "type": "number"
        }
      },
      "required": [
        "image"
      ]
    },
    "name": "pods_run"
  },
  {
    "annotations": {
      "title": "Pods: Top",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "List the resource consumption (CPU and memory) as recorded by the Kubernetes Metrics Server for the specified Kubernetes Pods in the all namespaces, the provided namespace, or the current namespace",
    "inputSchema": {
      "type": "object",
      "properties": {
        "all_namespaces": {
          "default": true,
          "description": "If true, list the resource consumption for all Pods in all namespaces. If false, list the resource consumption for Pods in the provided namespace or the current namespace",
          "type": "boolean"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "label_selector": {
          "description": "Kubernetes label selector (e.g. 'app=myapp,env=prod' or 'app in (myapp,yourapp)'), use this option when you want to filter the pods by label (Optional, only applicable when name is not provided)",
          "pattern": "([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]",
          "type": "string"
        },
        "name": {
          "description": "Name of the Pod to get the resource consumption from (Optional, all Pods in the namespace if not provided)",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace to get the Pods resource consumption from (Optional, current namespace if not provided and all_namespaces is false)",
          "type": "string"
        }
      }
    },
    "name": "pods_top"
  },
  {
    "annotations": {
      "title": "Resources: Create or Update",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Create or update a Kubernetes resource in the current cluster by providing a YAML or JSON representation of the resource\n(common apiVersion and kind include: v1 Pod, v1 Service, v1 Node, apps/v1 Deployment, networking.k8s.io/v1 Ingress)",
    "inputSchema": {
      "type": "object",
      "properties": {
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "resource": {
          "description": "A JSON or YAML containing a representation of the Kubernetes resource. Should include top-level fields such as apiVersion,kind,metadata, and spec",
          "type": "string"
        }
      },
      "required": [
        "resource"
      ]
    },
    "name": "resources_create_or_update"
  },
  {
    "annotations": {
      "title": "Resources: Delete",
      "readOnlyHint": false,
      "destructiveHint": true,
      "idempotentHint": true,
      "openWorldHint": true
    },
    "description": "Delete a Kubernetes resource in the current cluster by providing its apiVersion, kind, optionally the namespace, and its name\n(common apiVersion and kind include: v1 Pod, v1 Service, v1 Node, apps/v1 Deployment, networking.k8s.io/v1 Ingress)",
    "inputSchema": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "apiVersion of the resource (examples of valid apiVersion are: v1, apps/v1, networking.k8s.io/v1)",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "kind": {
          "description": "kind of the resource (examples of valid kind are: Pod, Service, Deployment, Ingress)",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "namespace": {
          "description": "Optional Namespace to delete the namespaced resource from (ignored in case of cluster scoped resources). If not provided, will delete resource from configured namespace",
          "type": "string"
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "name"
      ]
    },
    "name": "resources_delete"
  },
  {
    "annotations": {
      "title": "Resources: Get",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "Get a Kubernetes resource in the current cluster by providing its apiVersion, kind, optionally the namespace, and its name\n(common apiVersion and kind include: v1 Pod, v1 Service, v1 Node, apps/v1 Deployment, networking.k8s.io/v1 Ingress)",
    "inputSchema": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "apiVersion of the resource (examples of valid apiVersion are: v1, apps/v1, networking.k8s.io/v1)",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "kind": {
          "description": "kind of the resource (examples of valid kind are: Pod, Service, Deployment, Ingress)",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "namespace": {
          "description": "Optional Namespace to retrieve the namespaced resource from (ignored in case of cluster scoped resources). If not provided, will get resource from configured namespace",
          "type": "string"
        }
      },
      "required": [
        "apiVersion",
        "kind",
        "name"
      ]
    },
    "name": "resources_get"
  },
  {
    "annotations": {
      "title": "Resources: List",
      "readOnlyHint": true,
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": true
    },
    "description": "List Kubernetes resources and objects in the current cluster by providing their apiVersion and kind and optionally the namespace and label selector\n(common apiVersion and kind include: v1 Pod, v1 Service, v1 Node, apps/v1 Deployment, networking.k8s.io/v1 Ingress)",
    "inputSchema": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "apiVersion of the resources (examples of valid apiVersion are: v1, apps/v1, networking.k8s.io/v1)",
          "type": "string"
        },
        "context": {
          "description": "Optional parameter selecting which context to run the tool in. Defaults to fake-context if not set",
          "type": "string"
        },
        "kind": {
          "description": "kind of the resources (examples of valid kind are: Pod, Service, Deployment, Ingress)",
          "type": "string"
        },
        "labelSelector": {
          "description": "Optional Kubernetes label selector (e.g. 'app=myapp,env=prod' or 'app in (myapp,yourapp)'), use this option when you want to filter the pods by label",
          "pattern": "([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]",
          "type": "string"
        },
        "namespace": {
          "description": "Optional Namespace to retrieve the namespaced resources from (ignored in case of cluster scoped resources). If not provided, will list resources from all namespaces",
          "type": "string"
        }
      },
      "required": [
        "apiVersion",
        "kind"
      ]
    },
    "name": "resources_list"
  }
]